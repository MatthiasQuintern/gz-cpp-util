// template instantiations for mat4x4

namespace gz {

template class mat4x4<float>;

template class mat4x4<double>;

template class mat4x4<long double>;

template class mat4x4<uint8_t>;

template class mat4x4<uint16_t>;

template class mat4x4<uint32_t>;

template class mat4x4<uint64_t>;

template class mat4x4<int8_t>;

template class mat4x4<int16_t>;

template class mat4x4<int32_t>;

template class mat4x4<int64_t>;

template void mat4x4<float>::operator= <float>(const mat4x4<float>&);
template void mat4x4<float>::operator= <double>(const mat4x4<double>&);
template void mat4x4<float>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<float>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<float>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<float>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<float>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<float>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<float>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<float>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<float>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<double>::operator= <float>(const mat4x4<float>&);
template void mat4x4<double>::operator= <double>(const mat4x4<double>&);
template void mat4x4<double>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<double>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<double>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<double>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<double>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<double>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<double>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<double>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<double>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<long double>::operator= <float>(const mat4x4<float>&);
template void mat4x4<long double>::operator= <double>(const mat4x4<double>&);
template void mat4x4<long double>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<long double>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<long double>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<long double>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<long double>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<long double>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<long double>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<long double>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<long double>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<uint8_t>::operator= <float>(const mat4x4<float>&);
template void mat4x4<uint8_t>::operator= <double>(const mat4x4<double>&);
template void mat4x4<uint8_t>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<uint8_t>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<uint8_t>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<uint8_t>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<uint8_t>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<uint8_t>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<uint8_t>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<uint8_t>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<uint8_t>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<uint16_t>::operator= <float>(const mat4x4<float>&);
template void mat4x4<uint16_t>::operator= <double>(const mat4x4<double>&);
template void mat4x4<uint16_t>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<uint16_t>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<uint16_t>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<uint16_t>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<uint16_t>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<uint16_t>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<uint16_t>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<uint16_t>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<uint16_t>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<uint32_t>::operator= <float>(const mat4x4<float>&);
template void mat4x4<uint32_t>::operator= <double>(const mat4x4<double>&);
template void mat4x4<uint32_t>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<uint32_t>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<uint32_t>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<uint32_t>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<uint32_t>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<uint32_t>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<uint32_t>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<uint32_t>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<uint32_t>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<uint64_t>::operator= <float>(const mat4x4<float>&);
template void mat4x4<uint64_t>::operator= <double>(const mat4x4<double>&);
template void mat4x4<uint64_t>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<uint64_t>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<uint64_t>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<uint64_t>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<uint64_t>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<uint64_t>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<uint64_t>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<uint64_t>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<uint64_t>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<int8_t>::operator= <float>(const mat4x4<float>&);
template void mat4x4<int8_t>::operator= <double>(const mat4x4<double>&);
template void mat4x4<int8_t>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<int8_t>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<int8_t>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<int8_t>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<int8_t>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<int8_t>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<int8_t>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<int8_t>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<int8_t>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<int16_t>::operator= <float>(const mat4x4<float>&);
template void mat4x4<int16_t>::operator= <double>(const mat4x4<double>&);
template void mat4x4<int16_t>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<int16_t>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<int16_t>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<int16_t>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<int16_t>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<int16_t>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<int16_t>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<int16_t>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<int16_t>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<int32_t>::operator= <float>(const mat4x4<float>&);
template void mat4x4<int32_t>::operator= <double>(const mat4x4<double>&);
template void mat4x4<int32_t>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<int32_t>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<int32_t>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<int32_t>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<int32_t>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<int32_t>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<int32_t>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<int32_t>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<int32_t>::operator= <int64_t>(const mat4x4<int64_t>&);
template void mat4x4<int64_t>::operator= <float>(const mat4x4<float>&);
template void mat4x4<int64_t>::operator= <double>(const mat4x4<double>&);
template void mat4x4<int64_t>::operator= <long double>(const mat4x4<long double>&);
template void mat4x4<int64_t>::operator= <uint8_t>(const mat4x4<uint8_t>&);
template void mat4x4<int64_t>::operator= <uint16_t>(const mat4x4<uint16_t>&);
template void mat4x4<int64_t>::operator= <uint32_t>(const mat4x4<uint32_t>&);
template void mat4x4<int64_t>::operator= <uint64_t>(const mat4x4<uint64_t>&);
template void mat4x4<int64_t>::operator= <int8_t>(const mat4x4<int8_t>&);
template void mat4x4<int64_t>::operator= <int16_t>(const mat4x4<int16_t>&);
template void mat4x4<int64_t>::operator= <int32_t>(const mat4x4<int32_t>&);
template void mat4x4<int64_t>::operator= <int64_t>(const mat4x4<int64_t>&);

template void mat4x4<float>::operator= <float>(const float&);
template void mat4x4<float>::operator= <double>(const double&);
template void mat4x4<float>::operator= <long double>(const long double&);
template void mat4x4<float>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<float>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<float>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<float>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<float>::operator= <int8_t>(const int8_t&);
template void mat4x4<float>::operator= <int16_t>(const int16_t&);
template void mat4x4<float>::operator= <int32_t>(const int32_t&);
template void mat4x4<float>::operator= <int64_t>(const int64_t&);
template void mat4x4<double>::operator= <float>(const float&);
template void mat4x4<double>::operator= <double>(const double&);
template void mat4x4<double>::operator= <long double>(const long double&);
template void mat4x4<double>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<double>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<double>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<double>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<double>::operator= <int8_t>(const int8_t&);
template void mat4x4<double>::operator= <int16_t>(const int16_t&);
template void mat4x4<double>::operator= <int32_t>(const int32_t&);
template void mat4x4<double>::operator= <int64_t>(const int64_t&);
template void mat4x4<long double>::operator= <float>(const float&);
template void mat4x4<long double>::operator= <double>(const double&);
template void mat4x4<long double>::operator= <long double>(const long double&);
template void mat4x4<long double>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<long double>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<long double>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<long double>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<long double>::operator= <int8_t>(const int8_t&);
template void mat4x4<long double>::operator= <int16_t>(const int16_t&);
template void mat4x4<long double>::operator= <int32_t>(const int32_t&);
template void mat4x4<long double>::operator= <int64_t>(const int64_t&);
template void mat4x4<uint8_t>::operator= <float>(const float&);
template void mat4x4<uint8_t>::operator= <double>(const double&);
template void mat4x4<uint8_t>::operator= <long double>(const long double&);
template void mat4x4<uint8_t>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<uint8_t>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<uint8_t>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<uint8_t>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<uint8_t>::operator= <int8_t>(const int8_t&);
template void mat4x4<uint8_t>::operator= <int16_t>(const int16_t&);
template void mat4x4<uint8_t>::operator= <int32_t>(const int32_t&);
template void mat4x4<uint8_t>::operator= <int64_t>(const int64_t&);
template void mat4x4<uint16_t>::operator= <float>(const float&);
template void mat4x4<uint16_t>::operator= <double>(const double&);
template void mat4x4<uint16_t>::operator= <long double>(const long double&);
template void mat4x4<uint16_t>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<uint16_t>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<uint16_t>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<uint16_t>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<uint16_t>::operator= <int8_t>(const int8_t&);
template void mat4x4<uint16_t>::operator= <int16_t>(const int16_t&);
template void mat4x4<uint16_t>::operator= <int32_t>(const int32_t&);
template void mat4x4<uint16_t>::operator= <int64_t>(const int64_t&);
template void mat4x4<uint32_t>::operator= <float>(const float&);
template void mat4x4<uint32_t>::operator= <double>(const double&);
template void mat4x4<uint32_t>::operator= <long double>(const long double&);
template void mat4x4<uint32_t>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<uint32_t>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<uint32_t>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<uint32_t>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<uint32_t>::operator= <int8_t>(const int8_t&);
template void mat4x4<uint32_t>::operator= <int16_t>(const int16_t&);
template void mat4x4<uint32_t>::operator= <int32_t>(const int32_t&);
template void mat4x4<uint32_t>::operator= <int64_t>(const int64_t&);
template void mat4x4<uint64_t>::operator= <float>(const float&);
template void mat4x4<uint64_t>::operator= <double>(const double&);
template void mat4x4<uint64_t>::operator= <long double>(const long double&);
template void mat4x4<uint64_t>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<uint64_t>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<uint64_t>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<uint64_t>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<uint64_t>::operator= <int8_t>(const int8_t&);
template void mat4x4<uint64_t>::operator= <int16_t>(const int16_t&);
template void mat4x4<uint64_t>::operator= <int32_t>(const int32_t&);
template void mat4x4<uint64_t>::operator= <int64_t>(const int64_t&);
template void mat4x4<int8_t>::operator= <float>(const float&);
template void mat4x4<int8_t>::operator= <double>(const double&);
template void mat4x4<int8_t>::operator= <long double>(const long double&);
template void mat4x4<int8_t>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<int8_t>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<int8_t>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<int8_t>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<int8_t>::operator= <int8_t>(const int8_t&);
template void mat4x4<int8_t>::operator= <int16_t>(const int16_t&);
template void mat4x4<int8_t>::operator= <int32_t>(const int32_t&);
template void mat4x4<int8_t>::operator= <int64_t>(const int64_t&);
template void mat4x4<int16_t>::operator= <float>(const float&);
template void mat4x4<int16_t>::operator= <double>(const double&);
template void mat4x4<int16_t>::operator= <long double>(const long double&);
template void mat4x4<int16_t>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<int16_t>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<int16_t>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<int16_t>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<int16_t>::operator= <int8_t>(const int8_t&);
template void mat4x4<int16_t>::operator= <int16_t>(const int16_t&);
template void mat4x4<int16_t>::operator= <int32_t>(const int32_t&);
template void mat4x4<int16_t>::operator= <int64_t>(const int64_t&);
template void mat4x4<int32_t>::operator= <float>(const float&);
template void mat4x4<int32_t>::operator= <double>(const double&);
template void mat4x4<int32_t>::operator= <long double>(const long double&);
template void mat4x4<int32_t>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<int32_t>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<int32_t>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<int32_t>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<int32_t>::operator= <int8_t>(const int8_t&);
template void mat4x4<int32_t>::operator= <int16_t>(const int16_t&);
template void mat4x4<int32_t>::operator= <int32_t>(const int32_t&);
template void mat4x4<int32_t>::operator= <int64_t>(const int64_t&);
template void mat4x4<int64_t>::operator= <float>(const float&);
template void mat4x4<int64_t>::operator= <double>(const double&);
template void mat4x4<int64_t>::operator= <long double>(const long double&);
template void mat4x4<int64_t>::operator= <uint8_t>(const uint8_t&);
template void mat4x4<int64_t>::operator= <uint16_t>(const uint16_t&);
template void mat4x4<int64_t>::operator= <uint32_t>(const uint32_t&);
template void mat4x4<int64_t>::operator= <uint64_t>(const uint64_t&);
template void mat4x4<int64_t>::operator= <int8_t>(const int8_t&);
template void mat4x4<int64_t>::operator= <int16_t>(const int16_t&);
template void mat4x4<int64_t>::operator= <int32_t>(const int32_t&);
template void mat4x4<int64_t>::operator= <int64_t>(const int64_t&);

template mat4x4<float> mat4x4<float>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<float> mat4x4<float>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<double> mat4x4<double>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template mat4x4<float> mat4x4<float>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<float> mat4x4<float>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<double> mat4x4<double>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template void mat4x4<float>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<float>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<float>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<float>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<float>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<float>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<float>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<float>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<float>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<float>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<float>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<double>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<double>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<double>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<double>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<double>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<double>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<double>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<double>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<double>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<double>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<double>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<long double>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<long double>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<long double>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<long double>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<long double>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<long double>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<long double>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<long double>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<long double>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<long double>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<long double>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint8_t>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint16_t>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint32_t>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint64_t>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int8_t>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int8_t>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int8_t>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int8_t>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int8_t>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int8_t>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int8_t>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int8_t>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int8_t>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int8_t>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int8_t>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int16_t>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int16_t>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int16_t>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int16_t>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int16_t>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int16_t>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int16_t>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int16_t>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int16_t>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int16_t>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int16_t>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int32_t>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int32_t>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int32_t>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int32_t>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int32_t>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int32_t>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int32_t>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int32_t>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int32_t>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int32_t>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int32_t>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int64_t>::operator+= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int64_t>::operator+= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int64_t>::operator+= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int64_t>::operator+= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int64_t>::operator+= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int64_t>::operator+= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int64_t>::operator+= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int64_t>::operator+= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int64_t>::operator+= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int64_t>::operator+= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int64_t>::operator+= <mat4x4<int64_t>>(const mat4x4<int64_t>&);

template void mat4x4<float>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<float>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<float>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<float>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<float>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<float>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<float>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<float>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<float>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<float>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<float>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<double>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<double>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<double>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<double>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<double>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<double>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<double>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<double>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<double>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<double>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<double>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<long double>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<long double>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<long double>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<long double>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<long double>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<long double>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<long double>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<long double>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<long double>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<long double>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<long double>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint8_t>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint16_t>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint32_t>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint64_t>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int8_t>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int8_t>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int8_t>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int8_t>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int8_t>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int8_t>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int8_t>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int8_t>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int8_t>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int8_t>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int8_t>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int16_t>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int16_t>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int16_t>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int16_t>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int16_t>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int16_t>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int16_t>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int16_t>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int16_t>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int16_t>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int16_t>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int32_t>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int32_t>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int32_t>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int32_t>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int32_t>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int32_t>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int32_t>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int32_t>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int32_t>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int32_t>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int32_t>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int64_t>::operator-= <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int64_t>::operator-= <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int64_t>::operator-= <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int64_t>::operator-= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int64_t>::operator-= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int64_t>::operator-= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int64_t>::operator-= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int64_t>::operator-= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int64_t>::operator-= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int64_t>::operator-= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int64_t>::operator-= <mat4x4<int64_t>>(const mat4x4<int64_t>&);

template void mat4x4<uint8_t>::operator%= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint8_t>::operator%= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint8_t>::operator%= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint8_t>::operator%= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint8_t>::operator%= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint8_t>::operator%= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint8_t>::operator%= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint8_t>::operator%= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint16_t>::operator%= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint16_t>::operator%= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint16_t>::operator%= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint16_t>::operator%= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint16_t>::operator%= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint16_t>::operator%= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint16_t>::operator%= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint16_t>::operator%= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint32_t>::operator%= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint32_t>::operator%= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint32_t>::operator%= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint32_t>::operator%= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint32_t>::operator%= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint32_t>::operator%= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint32_t>::operator%= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint32_t>::operator%= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint64_t>::operator%= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint64_t>::operator%= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint64_t>::operator%= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint64_t>::operator%= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint64_t>::operator%= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint64_t>::operator%= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint64_t>::operator%= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint64_t>::operator%= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int8_t>::operator%= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int8_t>::operator%= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int8_t>::operator%= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int8_t>::operator%= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int8_t>::operator%= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int8_t>::operator%= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int8_t>::operator%= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int8_t>::operator%= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int16_t>::operator%= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int16_t>::operator%= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int16_t>::operator%= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int16_t>::operator%= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int16_t>::operator%= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int16_t>::operator%= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int16_t>::operator%= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int16_t>::operator%= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int32_t>::operator%= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int32_t>::operator%= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int32_t>::operator%= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int32_t>::operator%= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int32_t>::operator%= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int32_t>::operator%= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int32_t>::operator%= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int32_t>::operator%= <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int64_t>::operator%= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int64_t>::operator%= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int64_t>::operator%= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int64_t>::operator%= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int64_t>::operator%= <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int64_t>::operator%= <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int64_t>::operator%= <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int64_t>::operator%= <mat4x4<int64_t>>(const mat4x4<int64_t>&);

template void mat4x4<float>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<float>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<double>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<long double>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint8_t>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint16_t>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint32_t>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint64_t>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int8_t>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int16_t>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int32_t>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int64_t>::compWiseAssMult <mat4x4<int64_t>>(const mat4x4<int64_t>&);

template void mat4x4<float>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<float>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<double>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<long double>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint8_t>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint16_t>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint32_t>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<uint64_t>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int8_t>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int16_t>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int32_t>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<float>>(const mat4x4<float>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<double>>(const mat4x4<double>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<long double>>(const mat4x4<long double>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<uint8_t>>(const mat4x4<uint8_t>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<uint16_t>>(const mat4x4<uint16_t>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<uint32_t>>(const mat4x4<uint32_t>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<uint64_t>>(const mat4x4<uint64_t>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<int8_t>>(const mat4x4<int8_t>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<int16_t>>(const mat4x4<int16_t>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<int32_t>>(const mat4x4<int32_t>&);
template void mat4x4<int64_t>::compWiseAssDiv <mat4x4<int64_t>>(const mat4x4<int64_t>&);

template mat4x4<float> mat4x4<float>::operator+ <float>(const float&) const;
template mat4x4<float> mat4x4<float>::operator+ <double>(const double&) const;
template mat4x4<float> mat4x4<float>::operator+ <long double>(const long double&) const;
template mat4x4<float> mat4x4<float>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<float> mat4x4<float>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<float> mat4x4<float>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<float> mat4x4<float>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<float> mat4x4<float>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<float> mat4x4<float>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<float> mat4x4<float>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<float> mat4x4<float>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<double> mat4x4<double>::operator+ <float>(const float&) const;
template mat4x4<double> mat4x4<double>::operator+ <double>(const double&) const;
template mat4x4<double> mat4x4<double>::operator+ <long double>(const long double&) const;
template mat4x4<double> mat4x4<double>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<double> mat4x4<double>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<double> mat4x4<double>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<double> mat4x4<double>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<double> mat4x4<double>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<double> mat4x4<double>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<double> mat4x4<double>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<double> mat4x4<double>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <float>(const float&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <double>(const double&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <long double>(const long double&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<long double> mat4x4<long double>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <float>(const float&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <double>(const double&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <long double>(const long double&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <float>(const float&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <double>(const double&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <long double>(const long double&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <float>(const float&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <double>(const double&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <long double>(const long double&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <float>(const float&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <double>(const double&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <long double>(const long double&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <float>(const float&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <double>(const double&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <long double>(const long double&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <float>(const float&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <double>(const double&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <long double>(const long double&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <float>(const float&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <double>(const double&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <long double>(const long double&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator+ <int64_t>(const int64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <float>(const float&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <double>(const double&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <long double>(const long double&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <uint8_t>(const uint8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <uint16_t>(const uint16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <uint32_t>(const uint32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <uint64_t>(const uint64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <int8_t>(const int8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <int16_t>(const int16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <int32_t>(const int32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator+ <int64_t>(const int64_t&) const;

template mat4x4<float> mat4x4<float>::operator- <float>(const float&) const;
template mat4x4<float> mat4x4<float>::operator- <double>(const double&) const;
template mat4x4<float> mat4x4<float>::operator- <long double>(const long double&) const;
template mat4x4<float> mat4x4<float>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<float> mat4x4<float>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<float> mat4x4<float>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<float> mat4x4<float>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<float> mat4x4<float>::operator- <int8_t>(const int8_t&) const;
template mat4x4<float> mat4x4<float>::operator- <int16_t>(const int16_t&) const;
template mat4x4<float> mat4x4<float>::operator- <int32_t>(const int32_t&) const;
template mat4x4<float> mat4x4<float>::operator- <int64_t>(const int64_t&) const;
template mat4x4<double> mat4x4<double>::operator- <float>(const float&) const;
template mat4x4<double> mat4x4<double>::operator- <double>(const double&) const;
template mat4x4<double> mat4x4<double>::operator- <long double>(const long double&) const;
template mat4x4<double> mat4x4<double>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<double> mat4x4<double>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<double> mat4x4<double>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<double> mat4x4<double>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<double> mat4x4<double>::operator- <int8_t>(const int8_t&) const;
template mat4x4<double> mat4x4<double>::operator- <int16_t>(const int16_t&) const;
template mat4x4<double> mat4x4<double>::operator- <int32_t>(const int32_t&) const;
template mat4x4<double> mat4x4<double>::operator- <int64_t>(const int64_t&) const;
template mat4x4<long double> mat4x4<long double>::operator- <float>(const float&) const;
template mat4x4<long double> mat4x4<long double>::operator- <double>(const double&) const;
template mat4x4<long double> mat4x4<long double>::operator- <long double>(const long double&) const;
template mat4x4<long double> mat4x4<long double>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<long double> mat4x4<long double>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<long double> mat4x4<long double>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<long double> mat4x4<long double>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<long double> mat4x4<long double>::operator- <int8_t>(const int8_t&) const;
template mat4x4<long double> mat4x4<long double>::operator- <int16_t>(const int16_t&) const;
template mat4x4<long double> mat4x4<long double>::operator- <int32_t>(const int32_t&) const;
template mat4x4<long double> mat4x4<long double>::operator- <int64_t>(const int64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <float>(const float&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <double>(const double&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <long double>(const long double&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <int8_t>(const int8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <int16_t>(const int16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <int32_t>(const int32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator- <int64_t>(const int64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <float>(const float&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <double>(const double&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <long double>(const long double&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <int8_t>(const int8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <int16_t>(const int16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <int32_t>(const int32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator- <int64_t>(const int64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <float>(const float&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <double>(const double&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <long double>(const long double&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <int8_t>(const int8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <int16_t>(const int16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <int32_t>(const int32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator- <int64_t>(const int64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <float>(const float&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <double>(const double&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <long double>(const long double&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <int8_t>(const int8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <int16_t>(const int16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <int32_t>(const int32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator- <int64_t>(const int64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <float>(const float&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <double>(const double&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <long double>(const long double&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <int8_t>(const int8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <int16_t>(const int16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <int32_t>(const int32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator- <int64_t>(const int64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <float>(const float&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <double>(const double&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <long double>(const long double&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <int8_t>(const int8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <int16_t>(const int16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <int32_t>(const int32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator- <int64_t>(const int64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <float>(const float&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <double>(const double&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <long double>(const long double&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <int8_t>(const int8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <int16_t>(const int16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <int32_t>(const int32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator- <int64_t>(const int64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <float>(const float&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <double>(const double&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <long double>(const long double&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <uint8_t>(const uint8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <uint16_t>(const uint16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <uint32_t>(const uint32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <uint64_t>(const uint64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <int8_t>(const int8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <int16_t>(const int16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <int32_t>(const int32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator- <int64_t>(const int64_t&) const;

template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <uint8_t>(const uint8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <uint16_t>(const uint16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <uint32_t>(const uint32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <uint64_t>(const uint64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <int8_t>(const int8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <int16_t>(const int16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <int32_t>(const int32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator% <int64_t>(const int64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <uint8_t>(const uint8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <uint16_t>(const uint16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <uint32_t>(const uint32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <uint64_t>(const uint64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <int8_t>(const int8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <int16_t>(const int16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <int32_t>(const int32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator% <int64_t>(const int64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <uint8_t>(const uint8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <uint16_t>(const uint16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <uint32_t>(const uint32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <uint64_t>(const uint64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <int8_t>(const int8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <int16_t>(const int16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <int32_t>(const int32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator% <int64_t>(const int64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <uint8_t>(const uint8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <uint16_t>(const uint16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <uint32_t>(const uint32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <uint64_t>(const uint64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <int8_t>(const int8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <int16_t>(const int16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <int32_t>(const int32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator% <int64_t>(const int64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <uint8_t>(const uint8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <uint16_t>(const uint16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <uint32_t>(const uint32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <uint64_t>(const uint64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <int8_t>(const int8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <int16_t>(const int16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <int32_t>(const int32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator% <int64_t>(const int64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <uint8_t>(const uint8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <uint16_t>(const uint16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <uint32_t>(const uint32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <uint64_t>(const uint64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <int8_t>(const int8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <int16_t>(const int16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <int32_t>(const int32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator% <int64_t>(const int64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <uint8_t>(const uint8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <uint16_t>(const uint16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <uint32_t>(const uint32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <uint64_t>(const uint64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <int8_t>(const int8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <int16_t>(const int16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <int32_t>(const int32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator% <int64_t>(const int64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <uint8_t>(const uint8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <uint16_t>(const uint16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <uint32_t>(const uint32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <uint64_t>(const uint64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <int8_t>(const int8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <int16_t>(const int16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <int32_t>(const int32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator% <int64_t>(const int64_t&) const;

template mat4x4<float> mat4x4<float>::compWiseMult <float>(const float&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <double>(const double&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <long double>(const long double&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<float> mat4x4<float>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <float>(const float&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <double>(const double&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <long double>(const long double&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<double> mat4x4<double>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <float>(const float&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <double>(const double&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <long double>(const long double&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <float>(const float&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <double>(const double&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <long double>(const long double&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <float>(const float&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <double>(const double&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <long double>(const long double&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <float>(const float&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <double>(const double&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <long double>(const long double&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <float>(const float&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <double>(const double&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <long double>(const long double&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <float>(const float&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <double>(const double&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <long double>(const long double&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <float>(const float&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <double>(const double&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <long double>(const long double&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <float>(const float&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <double>(const double&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <long double>(const long double&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseMult <int64_t>(const int64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <float>(const float&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <double>(const double&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <long double>(const long double&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <uint8_t>(const uint8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <uint16_t>(const uint16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <uint32_t>(const uint32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <uint64_t>(const uint64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <int8_t>(const int8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <int16_t>(const int16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <int32_t>(const int32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseMult <int64_t>(const int64_t&) const;

template mat4x4<float> mat4x4<float>::compWiseDiv <float>(const float&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <double>(const double&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <long double>(const long double&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<float> mat4x4<float>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <float>(const float&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <double>(const double&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <long double>(const long double&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<double> mat4x4<double>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <float>(const float&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <double>(const double&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <long double>(const long double&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<long double> mat4x4<long double>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <float>(const float&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <double>(const double&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <long double>(const long double&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <float>(const float&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <double>(const double&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <long double>(const long double&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <float>(const float&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <double>(const double&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <long double>(const long double&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <float>(const float&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <double>(const double&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <long double>(const long double&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <float>(const float&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <double>(const double&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <long double>(const long double&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<int8_t> mat4x4<int8_t>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <float>(const float&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <double>(const double&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <long double>(const long double&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<int16_t> mat4x4<int16_t>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <float>(const float&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <double>(const double&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <long double>(const long double&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<int32_t> mat4x4<int32_t>::compWiseDiv <int64_t>(const int64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <float>(const float&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <double>(const double&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <long double>(const long double&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <uint8_t>(const uint8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <uint16_t>(const uint16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <uint32_t>(const uint32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <uint64_t>(const uint64_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <int8_t>(const int8_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <int16_t>(const int16_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <int32_t>(const int32_t&) const;
template mat4x4<int64_t> mat4x4<int64_t>::compWiseDiv <int64_t>(const int64_t&) const;

template void mat4x4<float>::operator+= <float>(const float&);
template void mat4x4<float>::operator+= <double>(const double&);
template void mat4x4<float>::operator+= <long double>(const long double&);
template void mat4x4<float>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<float>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<float>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<float>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<float>::operator+= <int8_t>(const int8_t&);
template void mat4x4<float>::operator+= <int16_t>(const int16_t&);
template void mat4x4<float>::operator+= <int32_t>(const int32_t&);
template void mat4x4<float>::operator+= <int64_t>(const int64_t&);
template void mat4x4<double>::operator+= <float>(const float&);
template void mat4x4<double>::operator+= <double>(const double&);
template void mat4x4<double>::operator+= <long double>(const long double&);
template void mat4x4<double>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<double>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<double>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<double>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<double>::operator+= <int8_t>(const int8_t&);
template void mat4x4<double>::operator+= <int16_t>(const int16_t&);
template void mat4x4<double>::operator+= <int32_t>(const int32_t&);
template void mat4x4<double>::operator+= <int64_t>(const int64_t&);
template void mat4x4<long double>::operator+= <float>(const float&);
template void mat4x4<long double>::operator+= <double>(const double&);
template void mat4x4<long double>::operator+= <long double>(const long double&);
template void mat4x4<long double>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<long double>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<long double>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<long double>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<long double>::operator+= <int8_t>(const int8_t&);
template void mat4x4<long double>::operator+= <int16_t>(const int16_t&);
template void mat4x4<long double>::operator+= <int32_t>(const int32_t&);
template void mat4x4<long double>::operator+= <int64_t>(const int64_t&);
template void mat4x4<uint8_t>::operator+= <float>(const float&);
template void mat4x4<uint8_t>::operator+= <double>(const double&);
template void mat4x4<uint8_t>::operator+= <long double>(const long double&);
template void mat4x4<uint8_t>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<uint8_t>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<uint8_t>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<uint8_t>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<uint8_t>::operator+= <int8_t>(const int8_t&);
template void mat4x4<uint8_t>::operator+= <int16_t>(const int16_t&);
template void mat4x4<uint8_t>::operator+= <int32_t>(const int32_t&);
template void mat4x4<uint8_t>::operator+= <int64_t>(const int64_t&);
template void mat4x4<uint16_t>::operator+= <float>(const float&);
template void mat4x4<uint16_t>::operator+= <double>(const double&);
template void mat4x4<uint16_t>::operator+= <long double>(const long double&);
template void mat4x4<uint16_t>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<uint16_t>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<uint16_t>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<uint16_t>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<uint16_t>::operator+= <int8_t>(const int8_t&);
template void mat4x4<uint16_t>::operator+= <int16_t>(const int16_t&);
template void mat4x4<uint16_t>::operator+= <int32_t>(const int32_t&);
template void mat4x4<uint16_t>::operator+= <int64_t>(const int64_t&);
template void mat4x4<uint32_t>::operator+= <float>(const float&);
template void mat4x4<uint32_t>::operator+= <double>(const double&);
template void mat4x4<uint32_t>::operator+= <long double>(const long double&);
template void mat4x4<uint32_t>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<uint32_t>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<uint32_t>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<uint32_t>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<uint32_t>::operator+= <int8_t>(const int8_t&);
template void mat4x4<uint32_t>::operator+= <int16_t>(const int16_t&);
template void mat4x4<uint32_t>::operator+= <int32_t>(const int32_t&);
template void mat4x4<uint32_t>::operator+= <int64_t>(const int64_t&);
template void mat4x4<uint64_t>::operator+= <float>(const float&);
template void mat4x4<uint64_t>::operator+= <double>(const double&);
template void mat4x4<uint64_t>::operator+= <long double>(const long double&);
template void mat4x4<uint64_t>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<uint64_t>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<uint64_t>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<uint64_t>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<uint64_t>::operator+= <int8_t>(const int8_t&);
template void mat4x4<uint64_t>::operator+= <int16_t>(const int16_t&);
template void mat4x4<uint64_t>::operator+= <int32_t>(const int32_t&);
template void mat4x4<uint64_t>::operator+= <int64_t>(const int64_t&);
template void mat4x4<int8_t>::operator+= <float>(const float&);
template void mat4x4<int8_t>::operator+= <double>(const double&);
template void mat4x4<int8_t>::operator+= <long double>(const long double&);
template void mat4x4<int8_t>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<int8_t>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<int8_t>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<int8_t>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<int8_t>::operator+= <int8_t>(const int8_t&);
template void mat4x4<int8_t>::operator+= <int16_t>(const int16_t&);
template void mat4x4<int8_t>::operator+= <int32_t>(const int32_t&);
template void mat4x4<int8_t>::operator+= <int64_t>(const int64_t&);
template void mat4x4<int16_t>::operator+= <float>(const float&);
template void mat4x4<int16_t>::operator+= <double>(const double&);
template void mat4x4<int16_t>::operator+= <long double>(const long double&);
template void mat4x4<int16_t>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<int16_t>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<int16_t>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<int16_t>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<int16_t>::operator+= <int8_t>(const int8_t&);
template void mat4x4<int16_t>::operator+= <int16_t>(const int16_t&);
template void mat4x4<int16_t>::operator+= <int32_t>(const int32_t&);
template void mat4x4<int16_t>::operator+= <int64_t>(const int64_t&);
template void mat4x4<int32_t>::operator+= <float>(const float&);
template void mat4x4<int32_t>::operator+= <double>(const double&);
template void mat4x4<int32_t>::operator+= <long double>(const long double&);
template void mat4x4<int32_t>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<int32_t>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<int32_t>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<int32_t>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<int32_t>::operator+= <int8_t>(const int8_t&);
template void mat4x4<int32_t>::operator+= <int16_t>(const int16_t&);
template void mat4x4<int32_t>::operator+= <int32_t>(const int32_t&);
template void mat4x4<int32_t>::operator+= <int64_t>(const int64_t&);
template void mat4x4<int64_t>::operator+= <float>(const float&);
template void mat4x4<int64_t>::operator+= <double>(const double&);
template void mat4x4<int64_t>::operator+= <long double>(const long double&);
template void mat4x4<int64_t>::operator+= <uint8_t>(const uint8_t&);
template void mat4x4<int64_t>::operator+= <uint16_t>(const uint16_t&);
template void mat4x4<int64_t>::operator+= <uint32_t>(const uint32_t&);
template void mat4x4<int64_t>::operator+= <uint64_t>(const uint64_t&);
template void mat4x4<int64_t>::operator+= <int8_t>(const int8_t&);
template void mat4x4<int64_t>::operator+= <int16_t>(const int16_t&);
template void mat4x4<int64_t>::operator+= <int32_t>(const int32_t&);
template void mat4x4<int64_t>::operator+= <int64_t>(const int64_t&);

template void mat4x4<float>::operator-= <float>(const float&);
template void mat4x4<float>::operator-= <double>(const double&);
template void mat4x4<float>::operator-= <long double>(const long double&);
template void mat4x4<float>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<float>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<float>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<float>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<float>::operator-= <int8_t>(const int8_t&);
template void mat4x4<float>::operator-= <int16_t>(const int16_t&);
template void mat4x4<float>::operator-= <int32_t>(const int32_t&);
template void mat4x4<float>::operator-= <int64_t>(const int64_t&);
template void mat4x4<double>::operator-= <float>(const float&);
template void mat4x4<double>::operator-= <double>(const double&);
template void mat4x4<double>::operator-= <long double>(const long double&);
template void mat4x4<double>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<double>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<double>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<double>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<double>::operator-= <int8_t>(const int8_t&);
template void mat4x4<double>::operator-= <int16_t>(const int16_t&);
template void mat4x4<double>::operator-= <int32_t>(const int32_t&);
template void mat4x4<double>::operator-= <int64_t>(const int64_t&);
template void mat4x4<long double>::operator-= <float>(const float&);
template void mat4x4<long double>::operator-= <double>(const double&);
template void mat4x4<long double>::operator-= <long double>(const long double&);
template void mat4x4<long double>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<long double>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<long double>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<long double>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<long double>::operator-= <int8_t>(const int8_t&);
template void mat4x4<long double>::operator-= <int16_t>(const int16_t&);
template void mat4x4<long double>::operator-= <int32_t>(const int32_t&);
template void mat4x4<long double>::operator-= <int64_t>(const int64_t&);
template void mat4x4<uint8_t>::operator-= <float>(const float&);
template void mat4x4<uint8_t>::operator-= <double>(const double&);
template void mat4x4<uint8_t>::operator-= <long double>(const long double&);
template void mat4x4<uint8_t>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<uint8_t>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<uint8_t>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<uint8_t>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<uint8_t>::operator-= <int8_t>(const int8_t&);
template void mat4x4<uint8_t>::operator-= <int16_t>(const int16_t&);
template void mat4x4<uint8_t>::operator-= <int32_t>(const int32_t&);
template void mat4x4<uint8_t>::operator-= <int64_t>(const int64_t&);
template void mat4x4<uint16_t>::operator-= <float>(const float&);
template void mat4x4<uint16_t>::operator-= <double>(const double&);
template void mat4x4<uint16_t>::operator-= <long double>(const long double&);
template void mat4x4<uint16_t>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<uint16_t>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<uint16_t>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<uint16_t>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<uint16_t>::operator-= <int8_t>(const int8_t&);
template void mat4x4<uint16_t>::operator-= <int16_t>(const int16_t&);
template void mat4x4<uint16_t>::operator-= <int32_t>(const int32_t&);
template void mat4x4<uint16_t>::operator-= <int64_t>(const int64_t&);
template void mat4x4<uint32_t>::operator-= <float>(const float&);
template void mat4x4<uint32_t>::operator-= <double>(const double&);
template void mat4x4<uint32_t>::operator-= <long double>(const long double&);
template void mat4x4<uint32_t>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<uint32_t>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<uint32_t>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<uint32_t>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<uint32_t>::operator-= <int8_t>(const int8_t&);
template void mat4x4<uint32_t>::operator-= <int16_t>(const int16_t&);
template void mat4x4<uint32_t>::operator-= <int32_t>(const int32_t&);
template void mat4x4<uint32_t>::operator-= <int64_t>(const int64_t&);
template void mat4x4<uint64_t>::operator-= <float>(const float&);
template void mat4x4<uint64_t>::operator-= <double>(const double&);
template void mat4x4<uint64_t>::operator-= <long double>(const long double&);
template void mat4x4<uint64_t>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<uint64_t>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<uint64_t>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<uint64_t>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<uint64_t>::operator-= <int8_t>(const int8_t&);
template void mat4x4<uint64_t>::operator-= <int16_t>(const int16_t&);
template void mat4x4<uint64_t>::operator-= <int32_t>(const int32_t&);
template void mat4x4<uint64_t>::operator-= <int64_t>(const int64_t&);
template void mat4x4<int8_t>::operator-= <float>(const float&);
template void mat4x4<int8_t>::operator-= <double>(const double&);
template void mat4x4<int8_t>::operator-= <long double>(const long double&);
template void mat4x4<int8_t>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<int8_t>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<int8_t>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<int8_t>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<int8_t>::operator-= <int8_t>(const int8_t&);
template void mat4x4<int8_t>::operator-= <int16_t>(const int16_t&);
template void mat4x4<int8_t>::operator-= <int32_t>(const int32_t&);
template void mat4x4<int8_t>::operator-= <int64_t>(const int64_t&);
template void mat4x4<int16_t>::operator-= <float>(const float&);
template void mat4x4<int16_t>::operator-= <double>(const double&);
template void mat4x4<int16_t>::operator-= <long double>(const long double&);
template void mat4x4<int16_t>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<int16_t>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<int16_t>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<int16_t>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<int16_t>::operator-= <int8_t>(const int8_t&);
template void mat4x4<int16_t>::operator-= <int16_t>(const int16_t&);
template void mat4x4<int16_t>::operator-= <int32_t>(const int32_t&);
template void mat4x4<int16_t>::operator-= <int64_t>(const int64_t&);
template void mat4x4<int32_t>::operator-= <float>(const float&);
template void mat4x4<int32_t>::operator-= <double>(const double&);
template void mat4x4<int32_t>::operator-= <long double>(const long double&);
template void mat4x4<int32_t>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<int32_t>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<int32_t>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<int32_t>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<int32_t>::operator-= <int8_t>(const int8_t&);
template void mat4x4<int32_t>::operator-= <int16_t>(const int16_t&);
template void mat4x4<int32_t>::operator-= <int32_t>(const int32_t&);
template void mat4x4<int32_t>::operator-= <int64_t>(const int64_t&);
template void mat4x4<int64_t>::operator-= <float>(const float&);
template void mat4x4<int64_t>::operator-= <double>(const double&);
template void mat4x4<int64_t>::operator-= <long double>(const long double&);
template void mat4x4<int64_t>::operator-= <uint8_t>(const uint8_t&);
template void mat4x4<int64_t>::operator-= <uint16_t>(const uint16_t&);
template void mat4x4<int64_t>::operator-= <uint32_t>(const uint32_t&);
template void mat4x4<int64_t>::operator-= <uint64_t>(const uint64_t&);
template void mat4x4<int64_t>::operator-= <int8_t>(const int8_t&);
template void mat4x4<int64_t>::operator-= <int16_t>(const int16_t&);
template void mat4x4<int64_t>::operator-= <int32_t>(const int32_t&);
template void mat4x4<int64_t>::operator-= <int64_t>(const int64_t&);

template void mat4x4<uint8_t>::operator%= <uint8_t>(const uint8_t&);
template void mat4x4<uint8_t>::operator%= <uint16_t>(const uint16_t&);
template void mat4x4<uint8_t>::operator%= <uint32_t>(const uint32_t&);
template void mat4x4<uint8_t>::operator%= <uint64_t>(const uint64_t&);
template void mat4x4<uint8_t>::operator%= <int8_t>(const int8_t&);
template void mat4x4<uint8_t>::operator%= <int16_t>(const int16_t&);
template void mat4x4<uint8_t>::operator%= <int32_t>(const int32_t&);
template void mat4x4<uint8_t>::operator%= <int64_t>(const int64_t&);
template void mat4x4<uint16_t>::operator%= <uint8_t>(const uint8_t&);
template void mat4x4<uint16_t>::operator%= <uint16_t>(const uint16_t&);
template void mat4x4<uint16_t>::operator%= <uint32_t>(const uint32_t&);
template void mat4x4<uint16_t>::operator%= <uint64_t>(const uint64_t&);
template void mat4x4<uint16_t>::operator%= <int8_t>(const int8_t&);
template void mat4x4<uint16_t>::operator%= <int16_t>(const int16_t&);
template void mat4x4<uint16_t>::operator%= <int32_t>(const int32_t&);
template void mat4x4<uint16_t>::operator%= <int64_t>(const int64_t&);
template void mat4x4<uint32_t>::operator%= <uint8_t>(const uint8_t&);
template void mat4x4<uint32_t>::operator%= <uint16_t>(const uint16_t&);
template void mat4x4<uint32_t>::operator%= <uint32_t>(const uint32_t&);
template void mat4x4<uint32_t>::operator%= <uint64_t>(const uint64_t&);
template void mat4x4<uint32_t>::operator%= <int8_t>(const int8_t&);
template void mat4x4<uint32_t>::operator%= <int16_t>(const int16_t&);
template void mat4x4<uint32_t>::operator%= <int32_t>(const int32_t&);
template void mat4x4<uint32_t>::operator%= <int64_t>(const int64_t&);
template void mat4x4<uint64_t>::operator%= <uint8_t>(const uint8_t&);
template void mat4x4<uint64_t>::operator%= <uint16_t>(const uint16_t&);
template void mat4x4<uint64_t>::operator%= <uint32_t>(const uint32_t&);
template void mat4x4<uint64_t>::operator%= <uint64_t>(const uint64_t&);
template void mat4x4<uint64_t>::operator%= <int8_t>(const int8_t&);
template void mat4x4<uint64_t>::operator%= <int16_t>(const int16_t&);
template void mat4x4<uint64_t>::operator%= <int32_t>(const int32_t&);
template void mat4x4<uint64_t>::operator%= <int64_t>(const int64_t&);
template void mat4x4<int8_t>::operator%= <uint8_t>(const uint8_t&);
template void mat4x4<int8_t>::operator%= <uint16_t>(const uint16_t&);
template void mat4x4<int8_t>::operator%= <uint32_t>(const uint32_t&);
template void mat4x4<int8_t>::operator%= <uint64_t>(const uint64_t&);
template void mat4x4<int8_t>::operator%= <int8_t>(const int8_t&);
template void mat4x4<int8_t>::operator%= <int16_t>(const int16_t&);
template void mat4x4<int8_t>::operator%= <int32_t>(const int32_t&);
template void mat4x4<int8_t>::operator%= <int64_t>(const int64_t&);
template void mat4x4<int16_t>::operator%= <uint8_t>(const uint8_t&);
template void mat4x4<int16_t>::operator%= <uint16_t>(const uint16_t&);
template void mat4x4<int16_t>::operator%= <uint32_t>(const uint32_t&);
template void mat4x4<int16_t>::operator%= <uint64_t>(const uint64_t&);
template void mat4x4<int16_t>::operator%= <int8_t>(const int8_t&);
template void mat4x4<int16_t>::operator%= <int16_t>(const int16_t&);
template void mat4x4<int16_t>::operator%= <int32_t>(const int32_t&);
template void mat4x4<int16_t>::operator%= <int64_t>(const int64_t&);
template void mat4x4<int32_t>::operator%= <uint8_t>(const uint8_t&);
template void mat4x4<int32_t>::operator%= <uint16_t>(const uint16_t&);
template void mat4x4<int32_t>::operator%= <uint32_t>(const uint32_t&);
template void mat4x4<int32_t>::operator%= <uint64_t>(const uint64_t&);
template void mat4x4<int32_t>::operator%= <int8_t>(const int8_t&);
template void mat4x4<int32_t>::operator%= <int16_t>(const int16_t&);
template void mat4x4<int32_t>::operator%= <int32_t>(const int32_t&);
template void mat4x4<int32_t>::operator%= <int64_t>(const int64_t&);
template void mat4x4<int64_t>::operator%= <uint8_t>(const uint8_t&);
template void mat4x4<int64_t>::operator%= <uint16_t>(const uint16_t&);
template void mat4x4<int64_t>::operator%= <uint32_t>(const uint32_t&);
template void mat4x4<int64_t>::operator%= <uint64_t>(const uint64_t&);
template void mat4x4<int64_t>::operator%= <int8_t>(const int8_t&);
template void mat4x4<int64_t>::operator%= <int16_t>(const int16_t&);
template void mat4x4<int64_t>::operator%= <int32_t>(const int32_t&);
template void mat4x4<int64_t>::operator%= <int64_t>(const int64_t&);

template void mat4x4<float>::compWiseAssMult <float>(const float&);
template void mat4x4<float>::compWiseAssMult <double>(const double&);
template void mat4x4<float>::compWiseAssMult <long double>(const long double&);
template void mat4x4<float>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<float>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<float>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<float>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<float>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<float>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<float>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<float>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<double>::compWiseAssMult <float>(const float&);
template void mat4x4<double>::compWiseAssMult <double>(const double&);
template void mat4x4<double>::compWiseAssMult <long double>(const long double&);
template void mat4x4<double>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<double>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<double>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<double>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<double>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<double>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<double>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<double>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<long double>::compWiseAssMult <float>(const float&);
template void mat4x4<long double>::compWiseAssMult <double>(const double&);
template void mat4x4<long double>::compWiseAssMult <long double>(const long double&);
template void mat4x4<long double>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<long double>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<long double>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<long double>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<long double>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<long double>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<long double>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<long double>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<uint8_t>::compWiseAssMult <float>(const float&);
template void mat4x4<uint8_t>::compWiseAssMult <double>(const double&);
template void mat4x4<uint8_t>::compWiseAssMult <long double>(const long double&);
template void mat4x4<uint8_t>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<uint8_t>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<uint8_t>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<uint8_t>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<uint8_t>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<uint8_t>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<uint8_t>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<uint8_t>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<uint16_t>::compWiseAssMult <float>(const float&);
template void mat4x4<uint16_t>::compWiseAssMult <double>(const double&);
template void mat4x4<uint16_t>::compWiseAssMult <long double>(const long double&);
template void mat4x4<uint16_t>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<uint16_t>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<uint16_t>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<uint16_t>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<uint16_t>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<uint16_t>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<uint16_t>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<uint16_t>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<uint32_t>::compWiseAssMult <float>(const float&);
template void mat4x4<uint32_t>::compWiseAssMult <double>(const double&);
template void mat4x4<uint32_t>::compWiseAssMult <long double>(const long double&);
template void mat4x4<uint32_t>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<uint32_t>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<uint32_t>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<uint32_t>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<uint32_t>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<uint32_t>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<uint32_t>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<uint32_t>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<uint64_t>::compWiseAssMult <float>(const float&);
template void mat4x4<uint64_t>::compWiseAssMult <double>(const double&);
template void mat4x4<uint64_t>::compWiseAssMult <long double>(const long double&);
template void mat4x4<uint64_t>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<uint64_t>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<uint64_t>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<uint64_t>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<uint64_t>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<uint64_t>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<uint64_t>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<uint64_t>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<int8_t>::compWiseAssMult <float>(const float&);
template void mat4x4<int8_t>::compWiseAssMult <double>(const double&);
template void mat4x4<int8_t>::compWiseAssMult <long double>(const long double&);
template void mat4x4<int8_t>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<int8_t>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<int8_t>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<int8_t>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<int8_t>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<int8_t>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<int8_t>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<int8_t>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<int16_t>::compWiseAssMult <float>(const float&);
template void mat4x4<int16_t>::compWiseAssMult <double>(const double&);
template void mat4x4<int16_t>::compWiseAssMult <long double>(const long double&);
template void mat4x4<int16_t>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<int16_t>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<int16_t>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<int16_t>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<int16_t>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<int16_t>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<int16_t>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<int16_t>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<int32_t>::compWiseAssMult <float>(const float&);
template void mat4x4<int32_t>::compWiseAssMult <double>(const double&);
template void mat4x4<int32_t>::compWiseAssMult <long double>(const long double&);
template void mat4x4<int32_t>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<int32_t>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<int32_t>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<int32_t>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<int32_t>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<int32_t>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<int32_t>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<int32_t>::compWiseAssMult <int64_t>(const int64_t&);
template void mat4x4<int64_t>::compWiseAssMult <float>(const float&);
template void mat4x4<int64_t>::compWiseAssMult <double>(const double&);
template void mat4x4<int64_t>::compWiseAssMult <long double>(const long double&);
template void mat4x4<int64_t>::compWiseAssMult <uint8_t>(const uint8_t&);
template void mat4x4<int64_t>::compWiseAssMult <uint16_t>(const uint16_t&);
template void mat4x4<int64_t>::compWiseAssMult <uint32_t>(const uint32_t&);
template void mat4x4<int64_t>::compWiseAssMult <uint64_t>(const uint64_t&);
template void mat4x4<int64_t>::compWiseAssMult <int8_t>(const int8_t&);
template void mat4x4<int64_t>::compWiseAssMult <int16_t>(const int16_t&);
template void mat4x4<int64_t>::compWiseAssMult <int32_t>(const int32_t&);
template void mat4x4<int64_t>::compWiseAssMult <int64_t>(const int64_t&);

template void mat4x4<float>::compWiseAssDiv <float>(const float&);
template void mat4x4<float>::compWiseAssDiv <double>(const double&);
template void mat4x4<float>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<float>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<float>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<float>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<float>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<float>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<float>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<float>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<float>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<double>::compWiseAssDiv <float>(const float&);
template void mat4x4<double>::compWiseAssDiv <double>(const double&);
template void mat4x4<double>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<double>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<double>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<double>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<double>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<double>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<double>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<double>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<double>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<long double>::compWiseAssDiv <float>(const float&);
template void mat4x4<long double>::compWiseAssDiv <double>(const double&);
template void mat4x4<long double>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<long double>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<long double>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<long double>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<long double>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<long double>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<long double>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<long double>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<long double>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<uint8_t>::compWiseAssDiv <float>(const float&);
template void mat4x4<uint8_t>::compWiseAssDiv <double>(const double&);
template void mat4x4<uint8_t>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<uint8_t>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<uint8_t>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<uint8_t>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<uint8_t>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<uint8_t>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<uint8_t>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<uint8_t>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<uint8_t>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<uint16_t>::compWiseAssDiv <float>(const float&);
template void mat4x4<uint16_t>::compWiseAssDiv <double>(const double&);
template void mat4x4<uint16_t>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<uint16_t>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<uint16_t>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<uint16_t>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<uint16_t>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<uint16_t>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<uint16_t>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<uint16_t>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<uint16_t>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<uint32_t>::compWiseAssDiv <float>(const float&);
template void mat4x4<uint32_t>::compWiseAssDiv <double>(const double&);
template void mat4x4<uint32_t>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<uint32_t>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<uint32_t>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<uint32_t>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<uint32_t>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<uint32_t>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<uint32_t>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<uint32_t>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<uint32_t>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<uint64_t>::compWiseAssDiv <float>(const float&);
template void mat4x4<uint64_t>::compWiseAssDiv <double>(const double&);
template void mat4x4<uint64_t>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<uint64_t>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<uint64_t>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<uint64_t>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<uint64_t>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<uint64_t>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<uint64_t>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<uint64_t>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<uint64_t>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<int8_t>::compWiseAssDiv <float>(const float&);
template void mat4x4<int8_t>::compWiseAssDiv <double>(const double&);
template void mat4x4<int8_t>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<int8_t>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<int8_t>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<int8_t>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<int8_t>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<int8_t>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<int8_t>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<int8_t>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<int8_t>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<int16_t>::compWiseAssDiv <float>(const float&);
template void mat4x4<int16_t>::compWiseAssDiv <double>(const double&);
template void mat4x4<int16_t>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<int16_t>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<int16_t>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<int16_t>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<int16_t>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<int16_t>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<int16_t>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<int16_t>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<int16_t>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<int32_t>::compWiseAssDiv <float>(const float&);
template void mat4x4<int32_t>::compWiseAssDiv <double>(const double&);
template void mat4x4<int32_t>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<int32_t>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<int32_t>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<int32_t>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<int32_t>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<int32_t>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<int32_t>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<int32_t>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<int32_t>::compWiseAssDiv <int64_t>(const int64_t&);
template void mat4x4<int64_t>::compWiseAssDiv <float>(const float&);
template void mat4x4<int64_t>::compWiseAssDiv <double>(const double&);
template void mat4x4<int64_t>::compWiseAssDiv <long double>(const long double&);
template void mat4x4<int64_t>::compWiseAssDiv <uint8_t>(const uint8_t&);
template void mat4x4<int64_t>::compWiseAssDiv <uint16_t>(const uint16_t&);
template void mat4x4<int64_t>::compWiseAssDiv <uint32_t>(const uint32_t&);
template void mat4x4<int64_t>::compWiseAssDiv <uint64_t>(const uint64_t&);
template void mat4x4<int64_t>::compWiseAssDiv <int8_t>(const int8_t&);
template void mat4x4<int64_t>::compWiseAssDiv <int16_t>(const int16_t&);
template void mat4x4<int64_t>::compWiseAssDiv <int32_t>(const int32_t&);
template void mat4x4<int64_t>::compWiseAssDiv <int64_t>(const int64_t&);

template vec4<float> mat4x4<float>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<float> mat4x4<float>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<double> mat4x4<double>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<long double> mat4x4<long double>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<uint8_t> mat4x4<uint8_t>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<uint16_t> mat4x4<uint16_t>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<uint32_t> mat4x4<uint32_t>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<uint64_t> mat4x4<uint64_t>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<int8_t> mat4x4<int8_t>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<int16_t> mat4x4<int16_t>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<int32_t> mat4x4<int32_t>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<float>>(const vec4<float>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<double>>(const vec4<double>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<long double>>(const vec4<long double>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<uint8_t>>(const vec4<uint8_t>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<uint16_t>>(const vec4<uint16_t>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<uint32_t>>(const vec4<uint32_t>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<uint64_t>>(const vec4<uint64_t>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<int8_t>>(const vec4<int8_t>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<int16_t>>(const vec4<int16_t>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<int32_t>>(const vec4<int32_t>&) const;
template vec4<int64_t> mat4x4<int64_t>::operator* <vec4<int64_t>>(const vec4<int64_t>&) const;

template mat4x2<float> mat4x4<float>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<float> mat4x4<float>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<double> mat4x4<double>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<long double> mat4x4<long double>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<uint8_t> mat4x4<uint8_t>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<uint16_t> mat4x4<uint16_t>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<uint32_t> mat4x4<uint32_t>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<uint64_t> mat4x4<uint64_t>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<int8_t> mat4x4<int8_t>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<int16_t> mat4x4<int16_t>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<int32_t> mat4x4<int32_t>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<float>>(const mat4x2<float>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<double>>(const mat4x2<double>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<long double>>(const mat4x2<long double>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<uint8_t>>(const mat4x2<uint8_t>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<uint16_t>>(const mat4x2<uint16_t>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<uint32_t>>(const mat4x2<uint32_t>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<uint64_t>>(const mat4x2<uint64_t>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<int8_t>>(const mat4x2<int8_t>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<int16_t>>(const mat4x2<int16_t>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<int32_t>>(const mat4x2<int32_t>&) const;
template mat4x2<int64_t> mat4x4<int64_t>::operator* <mat4x2<int64_t>>(const mat4x2<int64_t>&) const;

template mat4x3<float> mat4x4<float>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<float> mat4x4<float>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<double> mat4x4<double>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<long double> mat4x4<long double>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<uint8_t> mat4x4<uint8_t>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<uint16_t> mat4x4<uint16_t>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<uint32_t> mat4x4<uint32_t>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<uint64_t> mat4x4<uint64_t>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<int8_t> mat4x4<int8_t>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<int16_t> mat4x4<int16_t>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<int32_t> mat4x4<int32_t>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<float>>(const mat4x3<float>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<double>>(const mat4x3<double>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<long double>>(const mat4x3<long double>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<uint8_t>>(const mat4x3<uint8_t>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<uint16_t>>(const mat4x3<uint16_t>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<uint32_t>>(const mat4x3<uint32_t>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<uint64_t>>(const mat4x3<uint64_t>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<int8_t>>(const mat4x3<int8_t>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<int16_t>>(const mat4x3<int16_t>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<int32_t>>(const mat4x3<int32_t>&) const;
template mat4x3<int64_t> mat4x4<int64_t>::operator* <mat4x3<int64_t>>(const mat4x3<int64_t>&) const;

template mat4x4<float> mat4x4<float>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<float> mat4x4<float>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<double> mat4x4<double>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<long double> mat4x4<long double>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint8_t> mat4x4<uint8_t>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint16_t> mat4x4<uint16_t>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint32_t> mat4x4<uint32_t>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<uint64_t> mat4x4<uint64_t>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int8_t> mat4x4<int8_t>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int16_t> mat4x4<int16_t>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int32_t> mat4x4<int32_t>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<float>>(const mat4x4<float>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<double>>(const mat4x4<double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<long double>>(const mat4x4<long double>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template mat4x4<int64_t> mat4x4<int64_t>::operator* <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template bool mat4x4<float>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<float>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<float>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<float>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<float>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<float>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<float>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<float>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<float>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<float>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<float>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<double>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<double>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<double>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<double>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<double>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<double>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<double>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<double>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<double>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<double>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<double>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<long double>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<long double>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<long double>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<long double>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<long double>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<long double>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<long double>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<long double>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<long double>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<long double>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<long double>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint8_t>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint16_t>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint32_t>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint64_t>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int8_t>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int16_t>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int32_t>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int64_t>::operator== <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template bool mat4x4<float>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<float>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<float>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<float>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<float>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<float>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<float>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<float>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<float>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<float>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<float>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<double>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<double>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<double>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<double>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<double>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<double>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<double>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<double>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<double>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<double>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<double>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<long double>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<long double>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<long double>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<long double>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<long double>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<long double>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<long double>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<long double>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<long double>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<long double>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<long double>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint8_t>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint16_t>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint32_t>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint64_t>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int8_t>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int16_t>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int32_t>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int64_t>::operator< <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template bool mat4x4<float>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<float>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<float>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<float>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<float>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<float>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<float>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<float>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<float>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<float>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<float>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<double>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<double>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<double>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<double>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<double>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<double>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<double>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<double>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<double>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<double>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<double>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<long double>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<long double>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<long double>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<long double>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<long double>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<long double>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<long double>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<long double>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<long double>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<long double>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<long double>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint8_t>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint16_t>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint32_t>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint64_t>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int8_t>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int16_t>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int32_t>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int64_t>::operator> <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template bool mat4x4<float>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<float>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<float>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<float>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<float>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<float>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<float>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<float>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<float>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<float>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<float>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<double>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<double>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<double>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<double>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<double>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<double>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<double>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<double>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<double>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<double>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<double>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<long double>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint8_t>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint16_t>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint32_t>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint64_t>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int8_t>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int16_t>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int32_t>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int64_t>::operator!= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template bool mat4x4<float>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<float>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<float>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<float>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<float>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<float>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<float>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<float>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<float>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<float>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<float>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<double>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<double>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<double>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<double>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<double>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<double>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<double>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<double>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<double>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<double>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<double>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<long double>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint8_t>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint16_t>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint32_t>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint64_t>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int8_t>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int16_t>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int32_t>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int64_t>::operator<= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template bool mat4x4<float>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<float>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<float>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<float>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<float>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<float>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<float>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<float>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<float>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<float>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<float>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<double>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<double>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<double>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<double>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<double>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<double>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<double>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<double>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<double>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<double>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<double>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<long double>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint8_t>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint16_t>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint32_t>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<uint64_t>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int8_t>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int16_t>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int32_t>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<float>>(const mat4x4<float>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<double>>(const mat4x4<double>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<long double>>(const mat4x4<long double>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<uint8_t>>(const mat4x4<uint8_t>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<uint16_t>>(const mat4x4<uint16_t>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<uint32_t>>(const mat4x4<uint32_t>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<uint64_t>>(const mat4x4<uint64_t>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<int8_t>>(const mat4x4<int8_t>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<int16_t>>(const mat4x4<int16_t>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<int32_t>>(const mat4x4<int32_t>&) const;
template bool mat4x4<int64_t>::operator>= <mat4x4<int64_t>>(const mat4x4<int64_t>&) const;

template bool mat4x4<float>::operator== <float>(const float&) const;
template bool mat4x4<float>::operator== <double>(const double&) const;
template bool mat4x4<float>::operator== <long double>(const long double&) const;
template bool mat4x4<float>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<float>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<float>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<float>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<float>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<float>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<float>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<float>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<double>::operator== <float>(const float&) const;
template bool mat4x4<double>::operator== <double>(const double&) const;
template bool mat4x4<double>::operator== <long double>(const long double&) const;
template bool mat4x4<double>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<double>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<double>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<double>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<double>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<double>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<double>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<double>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<long double>::operator== <float>(const float&) const;
template bool mat4x4<long double>::operator== <double>(const double&) const;
template bool mat4x4<long double>::operator== <long double>(const long double&) const;
template bool mat4x4<long double>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<long double>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<long double>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<long double>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<long double>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<long double>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<long double>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<long double>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<uint8_t>::operator== <float>(const float&) const;
template bool mat4x4<uint8_t>::operator== <double>(const double&) const;
template bool mat4x4<uint8_t>::operator== <long double>(const long double&) const;
template bool mat4x4<uint8_t>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint8_t>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint8_t>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint8_t>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint8_t>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<uint8_t>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<uint8_t>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<uint8_t>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<uint16_t>::operator== <float>(const float&) const;
template bool mat4x4<uint16_t>::operator== <double>(const double&) const;
template bool mat4x4<uint16_t>::operator== <long double>(const long double&) const;
template bool mat4x4<uint16_t>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint16_t>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint16_t>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint16_t>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint16_t>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<uint16_t>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<uint16_t>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<uint16_t>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<uint32_t>::operator== <float>(const float&) const;
template bool mat4x4<uint32_t>::operator== <double>(const double&) const;
template bool mat4x4<uint32_t>::operator== <long double>(const long double&) const;
template bool mat4x4<uint32_t>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint32_t>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint32_t>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint32_t>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint32_t>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<uint32_t>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<uint32_t>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<uint32_t>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<uint64_t>::operator== <float>(const float&) const;
template bool mat4x4<uint64_t>::operator== <double>(const double&) const;
template bool mat4x4<uint64_t>::operator== <long double>(const long double&) const;
template bool mat4x4<uint64_t>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint64_t>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint64_t>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint64_t>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint64_t>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<uint64_t>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<uint64_t>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<uint64_t>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<int8_t>::operator== <float>(const float&) const;
template bool mat4x4<int8_t>::operator== <double>(const double&) const;
template bool mat4x4<int8_t>::operator== <long double>(const long double&) const;
template bool mat4x4<int8_t>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<int8_t>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<int8_t>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<int8_t>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<int8_t>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<int8_t>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<int8_t>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<int8_t>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<int16_t>::operator== <float>(const float&) const;
template bool mat4x4<int16_t>::operator== <double>(const double&) const;
template bool mat4x4<int16_t>::operator== <long double>(const long double&) const;
template bool mat4x4<int16_t>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<int16_t>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<int16_t>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<int16_t>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<int16_t>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<int16_t>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<int16_t>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<int16_t>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<int32_t>::operator== <float>(const float&) const;
template bool mat4x4<int32_t>::operator== <double>(const double&) const;
template bool mat4x4<int32_t>::operator== <long double>(const long double&) const;
template bool mat4x4<int32_t>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<int32_t>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<int32_t>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<int32_t>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<int32_t>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<int32_t>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<int32_t>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<int32_t>::operator== <int64_t>(const int64_t&) const;
template bool mat4x4<int64_t>::operator== <float>(const float&) const;
template bool mat4x4<int64_t>::operator== <double>(const double&) const;
template bool mat4x4<int64_t>::operator== <long double>(const long double&) const;
template bool mat4x4<int64_t>::operator== <uint8_t>(const uint8_t&) const;
template bool mat4x4<int64_t>::operator== <uint16_t>(const uint16_t&) const;
template bool mat4x4<int64_t>::operator== <uint32_t>(const uint32_t&) const;
template bool mat4x4<int64_t>::operator== <uint64_t>(const uint64_t&) const;
template bool mat4x4<int64_t>::operator== <int8_t>(const int8_t&) const;
template bool mat4x4<int64_t>::operator== <int16_t>(const int16_t&) const;
template bool mat4x4<int64_t>::operator== <int32_t>(const int32_t&) const;
template bool mat4x4<int64_t>::operator== <int64_t>(const int64_t&) const;

template bool mat4x4<float>::operator< <float>(const float&) const;
template bool mat4x4<float>::operator< <double>(const double&) const;
template bool mat4x4<float>::operator< <long double>(const long double&) const;
template bool mat4x4<float>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<float>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<float>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<float>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<float>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<float>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<float>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<float>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<double>::operator< <float>(const float&) const;
template bool mat4x4<double>::operator< <double>(const double&) const;
template bool mat4x4<double>::operator< <long double>(const long double&) const;
template bool mat4x4<double>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<double>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<double>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<double>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<double>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<double>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<double>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<double>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<long double>::operator< <float>(const float&) const;
template bool mat4x4<long double>::operator< <double>(const double&) const;
template bool mat4x4<long double>::operator< <long double>(const long double&) const;
template bool mat4x4<long double>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<long double>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<long double>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<long double>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<long double>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<long double>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<long double>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<long double>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<uint8_t>::operator< <float>(const float&) const;
template bool mat4x4<uint8_t>::operator< <double>(const double&) const;
template bool mat4x4<uint8_t>::operator< <long double>(const long double&) const;
template bool mat4x4<uint8_t>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint8_t>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint8_t>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint8_t>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint8_t>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<uint8_t>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<uint8_t>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<uint8_t>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<uint16_t>::operator< <float>(const float&) const;
template bool mat4x4<uint16_t>::operator< <double>(const double&) const;
template bool mat4x4<uint16_t>::operator< <long double>(const long double&) const;
template bool mat4x4<uint16_t>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint16_t>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint16_t>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint16_t>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint16_t>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<uint16_t>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<uint16_t>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<uint16_t>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<uint32_t>::operator< <float>(const float&) const;
template bool mat4x4<uint32_t>::operator< <double>(const double&) const;
template bool mat4x4<uint32_t>::operator< <long double>(const long double&) const;
template bool mat4x4<uint32_t>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint32_t>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint32_t>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint32_t>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint32_t>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<uint32_t>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<uint32_t>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<uint32_t>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<uint64_t>::operator< <float>(const float&) const;
template bool mat4x4<uint64_t>::operator< <double>(const double&) const;
template bool mat4x4<uint64_t>::operator< <long double>(const long double&) const;
template bool mat4x4<uint64_t>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint64_t>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint64_t>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint64_t>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint64_t>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<uint64_t>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<uint64_t>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<uint64_t>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<int8_t>::operator< <float>(const float&) const;
template bool mat4x4<int8_t>::operator< <double>(const double&) const;
template bool mat4x4<int8_t>::operator< <long double>(const long double&) const;
template bool mat4x4<int8_t>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<int8_t>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<int8_t>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<int8_t>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<int8_t>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<int8_t>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<int8_t>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<int8_t>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<int16_t>::operator< <float>(const float&) const;
template bool mat4x4<int16_t>::operator< <double>(const double&) const;
template bool mat4x4<int16_t>::operator< <long double>(const long double&) const;
template bool mat4x4<int16_t>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<int16_t>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<int16_t>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<int16_t>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<int16_t>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<int16_t>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<int16_t>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<int16_t>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<int32_t>::operator< <float>(const float&) const;
template bool mat4x4<int32_t>::operator< <double>(const double&) const;
template bool mat4x4<int32_t>::operator< <long double>(const long double&) const;
template bool mat4x4<int32_t>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<int32_t>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<int32_t>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<int32_t>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<int32_t>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<int32_t>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<int32_t>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<int32_t>::operator< <int64_t>(const int64_t&) const;
template bool mat4x4<int64_t>::operator< <float>(const float&) const;
template bool mat4x4<int64_t>::operator< <double>(const double&) const;
template bool mat4x4<int64_t>::operator< <long double>(const long double&) const;
template bool mat4x4<int64_t>::operator< <uint8_t>(const uint8_t&) const;
template bool mat4x4<int64_t>::operator< <uint16_t>(const uint16_t&) const;
template bool mat4x4<int64_t>::operator< <uint32_t>(const uint32_t&) const;
template bool mat4x4<int64_t>::operator< <uint64_t>(const uint64_t&) const;
template bool mat4x4<int64_t>::operator< <int8_t>(const int8_t&) const;
template bool mat4x4<int64_t>::operator< <int16_t>(const int16_t&) const;
template bool mat4x4<int64_t>::operator< <int32_t>(const int32_t&) const;
template bool mat4x4<int64_t>::operator< <int64_t>(const int64_t&) const;

template bool mat4x4<float>::operator> <float>(const float&) const;
template bool mat4x4<float>::operator> <double>(const double&) const;
template bool mat4x4<float>::operator> <long double>(const long double&) const;
template bool mat4x4<float>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<float>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<float>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<float>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<float>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<float>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<float>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<float>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<double>::operator> <float>(const float&) const;
template bool mat4x4<double>::operator> <double>(const double&) const;
template bool mat4x4<double>::operator> <long double>(const long double&) const;
template bool mat4x4<double>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<double>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<double>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<double>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<double>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<double>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<double>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<double>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<long double>::operator> <float>(const float&) const;
template bool mat4x4<long double>::operator> <double>(const double&) const;
template bool mat4x4<long double>::operator> <long double>(const long double&) const;
template bool mat4x4<long double>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<long double>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<long double>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<long double>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<long double>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<long double>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<long double>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<long double>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<uint8_t>::operator> <float>(const float&) const;
template bool mat4x4<uint8_t>::operator> <double>(const double&) const;
template bool mat4x4<uint8_t>::operator> <long double>(const long double&) const;
template bool mat4x4<uint8_t>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint8_t>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint8_t>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint8_t>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint8_t>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<uint8_t>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<uint8_t>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<uint8_t>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<uint16_t>::operator> <float>(const float&) const;
template bool mat4x4<uint16_t>::operator> <double>(const double&) const;
template bool mat4x4<uint16_t>::operator> <long double>(const long double&) const;
template bool mat4x4<uint16_t>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint16_t>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint16_t>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint16_t>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint16_t>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<uint16_t>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<uint16_t>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<uint16_t>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<uint32_t>::operator> <float>(const float&) const;
template bool mat4x4<uint32_t>::operator> <double>(const double&) const;
template bool mat4x4<uint32_t>::operator> <long double>(const long double&) const;
template bool mat4x4<uint32_t>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint32_t>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint32_t>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint32_t>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint32_t>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<uint32_t>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<uint32_t>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<uint32_t>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<uint64_t>::operator> <float>(const float&) const;
template bool mat4x4<uint64_t>::operator> <double>(const double&) const;
template bool mat4x4<uint64_t>::operator> <long double>(const long double&) const;
template bool mat4x4<uint64_t>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint64_t>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint64_t>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint64_t>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint64_t>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<uint64_t>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<uint64_t>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<uint64_t>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<int8_t>::operator> <float>(const float&) const;
template bool mat4x4<int8_t>::operator> <double>(const double&) const;
template bool mat4x4<int8_t>::operator> <long double>(const long double&) const;
template bool mat4x4<int8_t>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<int8_t>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<int8_t>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<int8_t>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<int8_t>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<int8_t>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<int8_t>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<int8_t>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<int16_t>::operator> <float>(const float&) const;
template bool mat4x4<int16_t>::operator> <double>(const double&) const;
template bool mat4x4<int16_t>::operator> <long double>(const long double&) const;
template bool mat4x4<int16_t>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<int16_t>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<int16_t>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<int16_t>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<int16_t>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<int16_t>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<int16_t>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<int16_t>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<int32_t>::operator> <float>(const float&) const;
template bool mat4x4<int32_t>::operator> <double>(const double&) const;
template bool mat4x4<int32_t>::operator> <long double>(const long double&) const;
template bool mat4x4<int32_t>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<int32_t>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<int32_t>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<int32_t>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<int32_t>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<int32_t>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<int32_t>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<int32_t>::operator> <int64_t>(const int64_t&) const;
template bool mat4x4<int64_t>::operator> <float>(const float&) const;
template bool mat4x4<int64_t>::operator> <double>(const double&) const;
template bool mat4x4<int64_t>::operator> <long double>(const long double&) const;
template bool mat4x4<int64_t>::operator> <uint8_t>(const uint8_t&) const;
template bool mat4x4<int64_t>::operator> <uint16_t>(const uint16_t&) const;
template bool mat4x4<int64_t>::operator> <uint32_t>(const uint32_t&) const;
template bool mat4x4<int64_t>::operator> <uint64_t>(const uint64_t&) const;
template bool mat4x4<int64_t>::operator> <int8_t>(const int8_t&) const;
template bool mat4x4<int64_t>::operator> <int16_t>(const int16_t&) const;
template bool mat4x4<int64_t>::operator> <int32_t>(const int32_t&) const;
template bool mat4x4<int64_t>::operator> <int64_t>(const int64_t&) const;

template bool mat4x4<float>::operator!= <float>(const float&) const;
template bool mat4x4<float>::operator!= <double>(const double&) const;
template bool mat4x4<float>::operator!= <long double>(const long double&) const;
template bool mat4x4<float>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<float>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<float>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<float>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<float>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<float>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<float>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<float>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<double>::operator!= <float>(const float&) const;
template bool mat4x4<double>::operator!= <double>(const double&) const;
template bool mat4x4<double>::operator!= <long double>(const long double&) const;
template bool mat4x4<double>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<double>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<double>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<double>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<double>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<double>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<double>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<double>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<long double>::operator!= <float>(const float&) const;
template bool mat4x4<long double>::operator!= <double>(const double&) const;
template bool mat4x4<long double>::operator!= <long double>(const long double&) const;
template bool mat4x4<long double>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<long double>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<long double>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<long double>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<long double>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<long double>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<long double>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<long double>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<uint8_t>::operator!= <float>(const float&) const;
template bool mat4x4<uint8_t>::operator!= <double>(const double&) const;
template bool mat4x4<uint8_t>::operator!= <long double>(const long double&) const;
template bool mat4x4<uint8_t>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint8_t>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint8_t>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint8_t>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint8_t>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<uint8_t>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<uint8_t>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<uint8_t>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<uint16_t>::operator!= <float>(const float&) const;
template bool mat4x4<uint16_t>::operator!= <double>(const double&) const;
template bool mat4x4<uint16_t>::operator!= <long double>(const long double&) const;
template bool mat4x4<uint16_t>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint16_t>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint16_t>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint16_t>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint16_t>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<uint16_t>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<uint16_t>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<uint16_t>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<uint32_t>::operator!= <float>(const float&) const;
template bool mat4x4<uint32_t>::operator!= <double>(const double&) const;
template bool mat4x4<uint32_t>::operator!= <long double>(const long double&) const;
template bool mat4x4<uint32_t>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint32_t>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint32_t>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint32_t>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint32_t>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<uint32_t>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<uint32_t>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<uint32_t>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<uint64_t>::operator!= <float>(const float&) const;
template bool mat4x4<uint64_t>::operator!= <double>(const double&) const;
template bool mat4x4<uint64_t>::operator!= <long double>(const long double&) const;
template bool mat4x4<uint64_t>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint64_t>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint64_t>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint64_t>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint64_t>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<uint64_t>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<uint64_t>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<uint64_t>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<int8_t>::operator!= <float>(const float&) const;
template bool mat4x4<int8_t>::operator!= <double>(const double&) const;
template bool mat4x4<int8_t>::operator!= <long double>(const long double&) const;
template bool mat4x4<int8_t>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int8_t>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int8_t>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int8_t>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int8_t>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<int8_t>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<int8_t>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<int8_t>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<int16_t>::operator!= <float>(const float&) const;
template bool mat4x4<int16_t>::operator!= <double>(const double&) const;
template bool mat4x4<int16_t>::operator!= <long double>(const long double&) const;
template bool mat4x4<int16_t>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int16_t>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int16_t>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int16_t>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int16_t>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<int16_t>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<int16_t>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<int16_t>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<int32_t>::operator!= <float>(const float&) const;
template bool mat4x4<int32_t>::operator!= <double>(const double&) const;
template bool mat4x4<int32_t>::operator!= <long double>(const long double&) const;
template bool mat4x4<int32_t>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int32_t>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int32_t>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int32_t>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int32_t>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<int32_t>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<int32_t>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<int32_t>::operator!= <int64_t>(const int64_t&) const;
template bool mat4x4<int64_t>::operator!= <float>(const float&) const;
template bool mat4x4<int64_t>::operator!= <double>(const double&) const;
template bool mat4x4<int64_t>::operator!= <long double>(const long double&) const;
template bool mat4x4<int64_t>::operator!= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int64_t>::operator!= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int64_t>::operator!= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int64_t>::operator!= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int64_t>::operator!= <int8_t>(const int8_t&) const;
template bool mat4x4<int64_t>::operator!= <int16_t>(const int16_t&) const;
template bool mat4x4<int64_t>::operator!= <int32_t>(const int32_t&) const;
template bool mat4x4<int64_t>::operator!= <int64_t>(const int64_t&) const;

template bool mat4x4<float>::operator<= <float>(const float&) const;
template bool mat4x4<float>::operator<= <double>(const double&) const;
template bool mat4x4<float>::operator<= <long double>(const long double&) const;
template bool mat4x4<float>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<float>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<float>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<float>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<float>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<float>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<float>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<float>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<double>::operator<= <float>(const float&) const;
template bool mat4x4<double>::operator<= <double>(const double&) const;
template bool mat4x4<double>::operator<= <long double>(const long double&) const;
template bool mat4x4<double>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<double>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<double>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<double>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<double>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<double>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<double>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<double>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<long double>::operator<= <float>(const float&) const;
template bool mat4x4<long double>::operator<= <double>(const double&) const;
template bool mat4x4<long double>::operator<= <long double>(const long double&) const;
template bool mat4x4<long double>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<long double>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<long double>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<long double>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<long double>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<long double>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<long double>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<long double>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<uint8_t>::operator<= <float>(const float&) const;
template bool mat4x4<uint8_t>::operator<= <double>(const double&) const;
template bool mat4x4<uint8_t>::operator<= <long double>(const long double&) const;
template bool mat4x4<uint8_t>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint8_t>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint8_t>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint8_t>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint8_t>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<uint8_t>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<uint8_t>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<uint8_t>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<uint16_t>::operator<= <float>(const float&) const;
template bool mat4x4<uint16_t>::operator<= <double>(const double&) const;
template bool mat4x4<uint16_t>::operator<= <long double>(const long double&) const;
template bool mat4x4<uint16_t>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint16_t>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint16_t>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint16_t>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint16_t>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<uint16_t>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<uint16_t>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<uint16_t>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<uint32_t>::operator<= <float>(const float&) const;
template bool mat4x4<uint32_t>::operator<= <double>(const double&) const;
template bool mat4x4<uint32_t>::operator<= <long double>(const long double&) const;
template bool mat4x4<uint32_t>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint32_t>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint32_t>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint32_t>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint32_t>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<uint32_t>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<uint32_t>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<uint32_t>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<uint64_t>::operator<= <float>(const float&) const;
template bool mat4x4<uint64_t>::operator<= <double>(const double&) const;
template bool mat4x4<uint64_t>::operator<= <long double>(const long double&) const;
template bool mat4x4<uint64_t>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint64_t>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint64_t>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint64_t>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint64_t>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<uint64_t>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<uint64_t>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<uint64_t>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<int8_t>::operator<= <float>(const float&) const;
template bool mat4x4<int8_t>::operator<= <double>(const double&) const;
template bool mat4x4<int8_t>::operator<= <long double>(const long double&) const;
template bool mat4x4<int8_t>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int8_t>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int8_t>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int8_t>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int8_t>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<int8_t>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<int8_t>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<int8_t>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<int16_t>::operator<= <float>(const float&) const;
template bool mat4x4<int16_t>::operator<= <double>(const double&) const;
template bool mat4x4<int16_t>::operator<= <long double>(const long double&) const;
template bool mat4x4<int16_t>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int16_t>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int16_t>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int16_t>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int16_t>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<int16_t>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<int16_t>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<int16_t>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<int32_t>::operator<= <float>(const float&) const;
template bool mat4x4<int32_t>::operator<= <double>(const double&) const;
template bool mat4x4<int32_t>::operator<= <long double>(const long double&) const;
template bool mat4x4<int32_t>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int32_t>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int32_t>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int32_t>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int32_t>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<int32_t>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<int32_t>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<int32_t>::operator<= <int64_t>(const int64_t&) const;
template bool mat4x4<int64_t>::operator<= <float>(const float&) const;
template bool mat4x4<int64_t>::operator<= <double>(const double&) const;
template bool mat4x4<int64_t>::operator<= <long double>(const long double&) const;
template bool mat4x4<int64_t>::operator<= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int64_t>::operator<= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int64_t>::operator<= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int64_t>::operator<= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int64_t>::operator<= <int8_t>(const int8_t&) const;
template bool mat4x4<int64_t>::operator<= <int16_t>(const int16_t&) const;
template bool mat4x4<int64_t>::operator<= <int32_t>(const int32_t&) const;
template bool mat4x4<int64_t>::operator<= <int64_t>(const int64_t&) const;

template bool mat4x4<float>::operator>= <float>(const float&) const;
template bool mat4x4<float>::operator>= <double>(const double&) const;
template bool mat4x4<float>::operator>= <long double>(const long double&) const;
template bool mat4x4<float>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<float>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<float>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<float>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<float>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<float>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<float>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<float>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<double>::operator>= <float>(const float&) const;
template bool mat4x4<double>::operator>= <double>(const double&) const;
template bool mat4x4<double>::operator>= <long double>(const long double&) const;
template bool mat4x4<double>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<double>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<double>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<double>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<double>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<double>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<double>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<double>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<long double>::operator>= <float>(const float&) const;
template bool mat4x4<long double>::operator>= <double>(const double&) const;
template bool mat4x4<long double>::operator>= <long double>(const long double&) const;
template bool mat4x4<long double>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<long double>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<long double>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<long double>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<long double>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<long double>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<long double>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<long double>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<uint8_t>::operator>= <float>(const float&) const;
template bool mat4x4<uint8_t>::operator>= <double>(const double&) const;
template bool mat4x4<uint8_t>::operator>= <long double>(const long double&) const;
template bool mat4x4<uint8_t>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint8_t>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint8_t>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint8_t>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint8_t>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<uint8_t>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<uint8_t>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<uint8_t>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<uint16_t>::operator>= <float>(const float&) const;
template bool mat4x4<uint16_t>::operator>= <double>(const double&) const;
template bool mat4x4<uint16_t>::operator>= <long double>(const long double&) const;
template bool mat4x4<uint16_t>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint16_t>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint16_t>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint16_t>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint16_t>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<uint16_t>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<uint16_t>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<uint16_t>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<uint32_t>::operator>= <float>(const float&) const;
template bool mat4x4<uint32_t>::operator>= <double>(const double&) const;
template bool mat4x4<uint32_t>::operator>= <long double>(const long double&) const;
template bool mat4x4<uint32_t>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint32_t>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint32_t>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint32_t>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint32_t>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<uint32_t>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<uint32_t>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<uint32_t>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<uint64_t>::operator>= <float>(const float&) const;
template bool mat4x4<uint64_t>::operator>= <double>(const double&) const;
template bool mat4x4<uint64_t>::operator>= <long double>(const long double&) const;
template bool mat4x4<uint64_t>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<uint64_t>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<uint64_t>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<uint64_t>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<uint64_t>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<uint64_t>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<uint64_t>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<uint64_t>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<int8_t>::operator>= <float>(const float&) const;
template bool mat4x4<int8_t>::operator>= <double>(const double&) const;
template bool mat4x4<int8_t>::operator>= <long double>(const long double&) const;
template bool mat4x4<int8_t>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int8_t>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int8_t>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int8_t>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int8_t>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<int8_t>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<int8_t>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<int8_t>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<int16_t>::operator>= <float>(const float&) const;
template bool mat4x4<int16_t>::operator>= <double>(const double&) const;
template bool mat4x4<int16_t>::operator>= <long double>(const long double&) const;
template bool mat4x4<int16_t>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int16_t>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int16_t>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int16_t>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int16_t>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<int16_t>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<int16_t>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<int16_t>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<int32_t>::operator>= <float>(const float&) const;
template bool mat4x4<int32_t>::operator>= <double>(const double&) const;
template bool mat4x4<int32_t>::operator>= <long double>(const long double&) const;
template bool mat4x4<int32_t>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int32_t>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int32_t>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int32_t>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int32_t>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<int32_t>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<int32_t>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<int32_t>::operator>= <int64_t>(const int64_t&) const;
template bool mat4x4<int64_t>::operator>= <float>(const float&) const;
template bool mat4x4<int64_t>::operator>= <double>(const double&) const;
template bool mat4x4<int64_t>::operator>= <long double>(const long double&) const;
template bool mat4x4<int64_t>::operator>= <uint8_t>(const uint8_t&) const;
template bool mat4x4<int64_t>::operator>= <uint16_t>(const uint16_t&) const;
template bool mat4x4<int64_t>::operator>= <uint32_t>(const uint32_t&) const;
template bool mat4x4<int64_t>::operator>= <uint64_t>(const uint64_t&) const;
template bool mat4x4<int64_t>::operator>= <int8_t>(const int8_t&) const;
template bool mat4x4<int64_t>::operator>= <int16_t>(const int16_t&) const;
template bool mat4x4<int64_t>::operator>= <int32_t>(const int32_t&) const;
template bool mat4x4<int64_t>::operator>= <int64_t>(const int64_t&) const;

template float mat4x4<float>::dot <float>(const mat4x4<float>&) const;
template float mat4x4<float>::dot <double>(const mat4x4<double>&) const;
template float mat4x4<float>::dot <long double>(const mat4x4<long double>&) const;
template float mat4x4<float>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template float mat4x4<float>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template float mat4x4<float>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template float mat4x4<float>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template float mat4x4<float>::dot <int8_t>(const mat4x4<int8_t>&) const;
template float mat4x4<float>::dot <int16_t>(const mat4x4<int16_t>&) const;
template float mat4x4<float>::dot <int32_t>(const mat4x4<int32_t>&) const;
template float mat4x4<float>::dot <int64_t>(const mat4x4<int64_t>&) const;
template double mat4x4<double>::dot <float>(const mat4x4<float>&) const;
template double mat4x4<double>::dot <double>(const mat4x4<double>&) const;
template double mat4x4<double>::dot <long double>(const mat4x4<long double>&) const;
template double mat4x4<double>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template double mat4x4<double>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template double mat4x4<double>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template double mat4x4<double>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template double mat4x4<double>::dot <int8_t>(const mat4x4<int8_t>&) const;
template double mat4x4<double>::dot <int16_t>(const mat4x4<int16_t>&) const;
template double mat4x4<double>::dot <int32_t>(const mat4x4<int32_t>&) const;
template double mat4x4<double>::dot <int64_t>(const mat4x4<int64_t>&) const;
template long double mat4x4<long double>::dot <float>(const mat4x4<float>&) const;
template long double mat4x4<long double>::dot <double>(const mat4x4<double>&) const;
template long double mat4x4<long double>::dot <long double>(const mat4x4<long double>&) const;
template long double mat4x4<long double>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template long double mat4x4<long double>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template long double mat4x4<long double>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template long double mat4x4<long double>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template long double mat4x4<long double>::dot <int8_t>(const mat4x4<int8_t>&) const;
template long double mat4x4<long double>::dot <int16_t>(const mat4x4<int16_t>&) const;
template long double mat4x4<long double>::dot <int32_t>(const mat4x4<int32_t>&) const;
template long double mat4x4<long double>::dot <int64_t>(const mat4x4<int64_t>&) const;
template uint8_t mat4x4<uint8_t>::dot <float>(const mat4x4<float>&) const;
template uint8_t mat4x4<uint8_t>::dot <double>(const mat4x4<double>&) const;
template uint8_t mat4x4<uint8_t>::dot <long double>(const mat4x4<long double>&) const;
template uint8_t mat4x4<uint8_t>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template uint8_t mat4x4<uint8_t>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template uint8_t mat4x4<uint8_t>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template uint8_t mat4x4<uint8_t>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template uint8_t mat4x4<uint8_t>::dot <int8_t>(const mat4x4<int8_t>&) const;
template uint8_t mat4x4<uint8_t>::dot <int16_t>(const mat4x4<int16_t>&) const;
template uint8_t mat4x4<uint8_t>::dot <int32_t>(const mat4x4<int32_t>&) const;
template uint8_t mat4x4<uint8_t>::dot <int64_t>(const mat4x4<int64_t>&) const;
template uint16_t mat4x4<uint16_t>::dot <float>(const mat4x4<float>&) const;
template uint16_t mat4x4<uint16_t>::dot <double>(const mat4x4<double>&) const;
template uint16_t mat4x4<uint16_t>::dot <long double>(const mat4x4<long double>&) const;
template uint16_t mat4x4<uint16_t>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template uint16_t mat4x4<uint16_t>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template uint16_t mat4x4<uint16_t>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template uint16_t mat4x4<uint16_t>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template uint16_t mat4x4<uint16_t>::dot <int8_t>(const mat4x4<int8_t>&) const;
template uint16_t mat4x4<uint16_t>::dot <int16_t>(const mat4x4<int16_t>&) const;
template uint16_t mat4x4<uint16_t>::dot <int32_t>(const mat4x4<int32_t>&) const;
template uint16_t mat4x4<uint16_t>::dot <int64_t>(const mat4x4<int64_t>&) const;
template uint32_t mat4x4<uint32_t>::dot <float>(const mat4x4<float>&) const;
template uint32_t mat4x4<uint32_t>::dot <double>(const mat4x4<double>&) const;
template uint32_t mat4x4<uint32_t>::dot <long double>(const mat4x4<long double>&) const;
template uint32_t mat4x4<uint32_t>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template uint32_t mat4x4<uint32_t>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template uint32_t mat4x4<uint32_t>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template uint32_t mat4x4<uint32_t>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template uint32_t mat4x4<uint32_t>::dot <int8_t>(const mat4x4<int8_t>&) const;
template uint32_t mat4x4<uint32_t>::dot <int16_t>(const mat4x4<int16_t>&) const;
template uint32_t mat4x4<uint32_t>::dot <int32_t>(const mat4x4<int32_t>&) const;
template uint32_t mat4x4<uint32_t>::dot <int64_t>(const mat4x4<int64_t>&) const;
template uint64_t mat4x4<uint64_t>::dot <float>(const mat4x4<float>&) const;
template uint64_t mat4x4<uint64_t>::dot <double>(const mat4x4<double>&) const;
template uint64_t mat4x4<uint64_t>::dot <long double>(const mat4x4<long double>&) const;
template uint64_t mat4x4<uint64_t>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template uint64_t mat4x4<uint64_t>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template uint64_t mat4x4<uint64_t>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template uint64_t mat4x4<uint64_t>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template uint64_t mat4x4<uint64_t>::dot <int8_t>(const mat4x4<int8_t>&) const;
template uint64_t mat4x4<uint64_t>::dot <int16_t>(const mat4x4<int16_t>&) const;
template uint64_t mat4x4<uint64_t>::dot <int32_t>(const mat4x4<int32_t>&) const;
template uint64_t mat4x4<uint64_t>::dot <int64_t>(const mat4x4<int64_t>&) const;
template int8_t mat4x4<int8_t>::dot <float>(const mat4x4<float>&) const;
template int8_t mat4x4<int8_t>::dot <double>(const mat4x4<double>&) const;
template int8_t mat4x4<int8_t>::dot <long double>(const mat4x4<long double>&) const;
template int8_t mat4x4<int8_t>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template int8_t mat4x4<int8_t>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template int8_t mat4x4<int8_t>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template int8_t mat4x4<int8_t>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template int8_t mat4x4<int8_t>::dot <int8_t>(const mat4x4<int8_t>&) const;
template int8_t mat4x4<int8_t>::dot <int16_t>(const mat4x4<int16_t>&) const;
template int8_t mat4x4<int8_t>::dot <int32_t>(const mat4x4<int32_t>&) const;
template int8_t mat4x4<int8_t>::dot <int64_t>(const mat4x4<int64_t>&) const;
template int16_t mat4x4<int16_t>::dot <float>(const mat4x4<float>&) const;
template int16_t mat4x4<int16_t>::dot <double>(const mat4x4<double>&) const;
template int16_t mat4x4<int16_t>::dot <long double>(const mat4x4<long double>&) const;
template int16_t mat4x4<int16_t>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template int16_t mat4x4<int16_t>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template int16_t mat4x4<int16_t>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template int16_t mat4x4<int16_t>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template int16_t mat4x4<int16_t>::dot <int8_t>(const mat4x4<int8_t>&) const;
template int16_t mat4x4<int16_t>::dot <int16_t>(const mat4x4<int16_t>&) const;
template int16_t mat4x4<int16_t>::dot <int32_t>(const mat4x4<int32_t>&) const;
template int16_t mat4x4<int16_t>::dot <int64_t>(const mat4x4<int64_t>&) const;
template int32_t mat4x4<int32_t>::dot <float>(const mat4x4<float>&) const;
template int32_t mat4x4<int32_t>::dot <double>(const mat4x4<double>&) const;
template int32_t mat4x4<int32_t>::dot <long double>(const mat4x4<long double>&) const;
template int32_t mat4x4<int32_t>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template int32_t mat4x4<int32_t>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template int32_t mat4x4<int32_t>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template int32_t mat4x4<int32_t>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template int32_t mat4x4<int32_t>::dot <int8_t>(const mat4x4<int8_t>&) const;
template int32_t mat4x4<int32_t>::dot <int16_t>(const mat4x4<int16_t>&) const;
template int32_t mat4x4<int32_t>::dot <int32_t>(const mat4x4<int32_t>&) const;
template int32_t mat4x4<int32_t>::dot <int64_t>(const mat4x4<int64_t>&) const;
template int64_t mat4x4<int64_t>::dot <float>(const mat4x4<float>&) const;
template int64_t mat4x4<int64_t>::dot <double>(const mat4x4<double>&) const;
template int64_t mat4x4<int64_t>::dot <long double>(const mat4x4<long double>&) const;
template int64_t mat4x4<int64_t>::dot <uint8_t>(const mat4x4<uint8_t>&) const;
template int64_t mat4x4<int64_t>::dot <uint16_t>(const mat4x4<uint16_t>&) const;
template int64_t mat4x4<int64_t>::dot <uint32_t>(const mat4x4<uint32_t>&) const;
template int64_t mat4x4<int64_t>::dot <uint64_t>(const mat4x4<uint64_t>&) const;
template int64_t mat4x4<int64_t>::dot <int8_t>(const mat4x4<int8_t>&) const;
template int64_t mat4x4<int64_t>::dot <int16_t>(const mat4x4<int16_t>&) const;
template int64_t mat4x4<int64_t>::dot <int32_t>(const mat4x4<int32_t>&) const;
template int64_t mat4x4<int64_t>::dot <int64_t>(const mat4x4<int64_t>&) const;



} // namespace gz
